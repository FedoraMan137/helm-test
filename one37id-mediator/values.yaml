# Default values for one37-mediator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: "mediator"
fullname: "mediator"
namespace:
  create: false
  name: one37id

# Any value here above 1 will require the REDIS or MQ service
# to be enabled and specified below
replica:
  replicaCount: 1

# Supported values: redis, rabbitmq
  replicaQueHandler:
    enabled: true
    handler: redis

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

image:
  repository: registry.gitlab.com/one37id/registry/mediatoragent/r2dev
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  imagePullSecrets: [{"name": "gitlab-auth"}]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "svc-mediator"

podAnnotations: {}

## Mediator pods' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable Mediator pods' Security Context
## @param podSecurityContext.fsGroup User ID for the container
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Mediator containers' Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enable Mediator containers' Security Context
## @param containerSecurityContext.runAsUser Group ID for the volumes of the pod
## @param containerSecurityContext.runAsNonRoot Set Mediator container's Security Context runAsNonRoot
##
containerSecurityContext:
  runAsUser: 1001
  runAsNonRoot: true

updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: "RollingUpdate"

service:
  type: "ClusterIP"
  port: "8080"

ingress:
  enabled: true
  className: ""
  annotations:
    class: "nginx"
    proxybodysize: "50m"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: aks-mediator.one37.id
      paths:
        - path: /
          pathType: ImplementationSpecific
        - path: /metrics
          pathType: Prefix
          port: 5067
  tls:
   - secretname: tls-one37id
     hosts:
       - aks-mediator.one37.id

ingresssticky:
  enabled: false
  className: ""
  annotations:
    class: "nginx"
    affinity: "cookie"
    proxybodysize: "50m"
    sessioncookietimeout: "36000"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: aks-mediator.one37.id
      paths:
        - path: /hubs/mediator/
          pathType: ImplementationSpecific
  tls:
   - secretname: tls-one37id
     hosts:
       - aks-mediator.one37.id

resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  limits: {}
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}

pvc:
  enabled: false
  name: "mediator-pvc"
  accessModes:
    - ReadWriteOnce
  storageClassName: "default"
  size: "5Gi"


nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  create: true
  wallet:
    name: "mediator-secrets"
    WALLET_ID: "walletid"
    WALLET_KEY: "walletkey"
    PG_USER: "postgres"
    PG_CONNECTION: "psql-postgresql:5432"
  postgres:
    name: "psql-postgresql"
    passwordKey: "postgres-password"
  redis:
    name: "redis"
    passwordKey: "redis-password"

environ:
  - name: ASPNETCORE_ENVIRONMENT
    value: "Development"
  - name: DEFAULT_LOG_LEVEL
    value: "1"
  - name: EDGE_BACKUP_PATH
    value: "/var/backups"
  - name: MEDIATOR_ENDPOINT
    value: "https://aks-mediator.one37.id"
  - name: MINIMUM_LOG_LEVEL
    value: "1"
  - name: OTEL_ENDPOINT
    value: "http://otel-demo-otelcol:4317"
  - name: OTEL_EXPORT_PROMETHEUS
    value: "true"
  - name: OTEL_METRICS_ENABLED
    value: "true"
  - name: OTEL_TRACE_ENABLED
    value: "true"
  - name: OTEL_PROTOCOL
    value: "grpc"
  - name: PG_DBNAME
    value: "aks_mediator_db"
  - name: REDIS_HOST
    value: "redis-master"
  - name: REDIS_PORT
    value: "6379"
  - name: STORAGE_TYPE
    value: "postgres_storage"
  - name: USE_HTTPS_MESSAGE_TYPES
    value: "false"
  - name: WEB_HOST
    value: "http://0.0.0.0:8080"

envfrom:
  - name: WALLET_ID
    secretname: "mediator-secrets"
    key: "WALLET_ID"
  - name: WALLET_KEY
    secretname: "mediator-secrets"
    key: "WALLET_KEY"
  - name: PG_USER
    secretname: "mediator-secrets"
    key: "PG_USER"
  - name: PG_ADMIN_USER
    secretname: "mediator-secrets"
    key: "PG_USER"
  - name: PG_CONNECTION
    secretname: "mediator-secrets"
    key: "PG_CONNECTION"
  - name: PG_PSWD
    secretname: "psql-postgresql"
    key: "postgres-password"
  - name: PG_ADMIN_PSWD
    secretname: "psql-postgresql"
    key: "postgres-password"
  - name: REDIS_PSWD
    secretname: "redis"
    key: "redis-password"


## @param extraVolumes Optionally specify extra list of additional volumes for PhpMyAdmin pods
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for PhpMyAdmin container(s)
##
extraVolumeMounts: []
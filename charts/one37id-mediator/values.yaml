# Default values for one37id-mediator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace:
  create: false
  name: "one37id"

replicaCount: 1

# Supported values: redis, rabbitmq
replicaQueHandler:
  enabled: true
  handler: redis

image:
  repository: registry.gitlab.com/one37id/registry/mediatoragent/r2dev
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [{"name": "gitlab-auth"}]
nameOverride: "one37id-mediator"
fullnameOverride: "one37id-mediator"

# do liveness checking
liveCheck: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsUser: 1001
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    proxybodysize: "50m"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mediator.dev-one37.id
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: tls-dev-one37-id
      hosts:
        - mediator.dev-one37.id

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  create: true
  postgresSecretName: "psql-postgresql"
  redisSecretName: "redis"
  app:
    WALLET_ID: "walletid"
    WALLET_KEY: "walletkey"
    PG_USER: "postgres"
    PG_CONNECTION: "psql-postgresql:5432"
  postgres:
    passwordKey: "postgres-password"
  redis:
    passwordKey: "redis-password"

environment:
  ASPNETCORE_ENVIRONMENT: Development
  DEFAULT_LOG_LEVEL: 1
  EDGE_BACKUP_PATH: /var/backups
  MEDIATOR_ENDPOINT: https://mediator.dev-one37.id
  MINIMUM_LOG_LEVEL: 1
  OTEL_ENDPOINT: https://az-dev-db.one37id.com:4317
  OTEL_METRICS_ENABLED: true
  OTEL_TRACE_ENABLED: true
  OTEL_METRICS_CONSOLE: true
  OTEL_EXPORT_PROMETHEUS: true
  OTEL_LOGEXPORT_ENABLED: false
  OTEL_PROTOCOL: grpc
  PG_DBNAME: dev_mediator_db
  REDIS_HOST: redis-master
  REDIS_PORT: 6379
  STORAGE_TYPE: postgres_storage
  USE_HTTPS_MESSAGE_TYPES: false
  WEB_HOST: http://0.0.0.0:8080


#Read Secrets from Kubernetes Secrets - see below for details
secretsAppRef:
  WALLET_ID: "WALLET_ID"
  WALLET_KEY: "WALLET_KEY"
  PG_USER: "PG_USER"
  PG_ADMIN_USER: "PG_USER"
  PG_CONNECTION: "PG_CONNECTION"

#Read Secrets from Kubernetes Secrets - see below for details
secretsPGRef:
  #Read Secrets from Postgres Instance Secrets
  PG_PSWD: "postgres-password"
  PG_ADMIN_PSWD: "postgres-password"
secretsREDISRef:
  REDIS_PSWD: "redis-password"


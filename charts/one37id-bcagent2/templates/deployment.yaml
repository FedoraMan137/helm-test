{{- $fullName := include "one37id-bcagent2.fullname" . -}}
{{- $postgresSecretName := printf "%s" .Values.secrets.postgresSecretName | trunc 63 | trimSuffix "-" -}}
{{- $redisSecretName := printf "%s" .Values.secrets.redisSecretName | trunc 63 | trimSuffix "-" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "one37id-bcagent2.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "one37id-bcagent2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "one37id-bcagent2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "one37id-bcagent2.serviceAccountName" . }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      restartPolicy: Always
      containers:
        - name: {{ $fullName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          envFrom:
          - configMapRef:
              name: {{ $fullName }}
          env:
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.secrets.create }}
            {{- range $key, $value := .Values.secrets.app }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $key }}
                  name: {{ $fullName }}
                  optional: false
            {{- end }}
            {{- range $key, $value := .Values.secretsPGRef }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value | quote }}
                  name: {{ $postgresSecretName | quote }}
                  optional: false
            {{- end }}
            {{- range $key, $value := .Values.secretsREDISRef }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value | quote }}
                  name: {{ $redisSecretName | quote }}
                  optional: false
            {{- end }}
          {{- end }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $key, $value := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $value }}
              protocol: TCP
          {{- end }}
          {{- if .Values.liveCheck }}
          livenessProbe:
            httpGet:
              path: /bc/studio/health
              port: 8083
          readinessProbe:
            httpGet:
              path: /bc/agency/health
              port: 8081
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ .Values.resourceVolume.name }}
            mountPath: {{ .Values.resourceVolume.mountPath }}
          - name: {{ .Values.workflowVolume.name }}
            mountPath: {{ .Values.workflowVolume.mountPath }}
      volumes:
        - name: {{ .Values.resourceVolume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.resourceVolume.name }}
        - name: {{ .Values.workflowVolume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.workflowVolume.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

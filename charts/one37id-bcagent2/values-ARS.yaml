# Default values for one37 Business Connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "one37id-arsbc2"
fullnameOverride: "one37id-arsbc2"
liveCheck: true

image:
  repository: registry.gitlab.com/one37id/registry/solitaire/private
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [{"name": "gitlab-auth"}]

# Any value here above 1 will require the REDIS or MQ service
# to be enabled and specified below
replicaCount: 1

# Supported values: redis, rabbitmq
replicaQueHandler:
  enabled: false
  handler: redis

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}


podSecurityContext:
  enabled: true
  fsGroup: 1001

containerSecurityContext:
  runAsUser: 1001
  runAsGroup: 0
  runAsNonRoot: true

updateStrategy:
#   ## StrategyType
#   ## Can be set to RollingUpdate or OnDelete
#   ##
  type: "OnDelete"

service:
  type: "ClusterIP"
  twoPortMode: true
  ports:
    bootport: 8083
    openport: 8080
    adminport: 8081


ingress:
  enabled: true
  className: nginx
  annotations:
    # class: "nginx"
    # affinity: "cookie"
    proxybodysize: "50m"
    # sessioncookietimeout: "36000"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ars.dev-one37.id
      paths:
        # - path: /bc/agent
        #   pathType: Prefix
        #   port: 8080
        # - path: /bc/vc
        #   pathType: Prefix
        #   port: 8080
        # - path: /bc/studio
        #   pathType: Prefix
        #   port: 8083
        - path: /bc/agent
          pathType: Prefix
          port: 8080
    - host: ars.dev-one37.id
      paths:
        - path: /bc/agency
          pathType: Prefix
          port: 8081
  tls:
    - hosts:
        - ars.dev-one37.id
        - ars-agent.dev-one37.id
      secretName: tls-dev-one37-id

resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  limits: {}
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}



nodeSelector: {}

tolerations:

affinity: {}

configmap:
  ASPNETCORE_ENVIRONMENT: "Development"
  MINIMUM_LOG_LEVEL: 1
  # PG_DBNAME defined in the configmap will be used as the default database name

environment:
  AGENT_NAME: "ARS Business Connector"
  AGENT_CATEGORY: "Device"
  PG_HOST: "psql-postgresql"
  WALLET_PG_HOST: "psql-postgresql"
  AUDIT_PG_HOST: "psql-postgresql"
  REDIS_HOST: "redis-master"
  PG_PORT: "5432"
  USE_HTTPS: "false"
    #Metrics Support
  OTEL_METRICS_ENABLED: "false"
  OTEL_LOGGING_ENABLED: "false"
  OTEL_PROMETHEUS_EXPORT: "false"
  OTEL_ENDPOINT: "https://az-dev-db.one37id.com:4317"
  OTEL_PROTOCOL: "GRPC"
  APP_INSIGHTS_CS: "InstrumentationKey=fe47e6cf-d4bc-44a8-96ae-7ede2471e1f8;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/"
  PROMETHEUS_URL: http://prometheus:9090/api/v1


secrets:
  create: true
  postgresSecretName: "psql-postgresql"
  redisSecretName: "redis"
  app:
    PG_USER: postgres
    PG_ADMIN_USER: postgres

  postgres:
    name: "psql-postgresql"
    passwordKey: "postgres-password"
  redis:
    name: "redis"
    passwordKey: "redis-password"


#Read Secrets from Postgres Secrets
secretsPGRef:
  PG_PSWD: "postgres-password"
  PG_ADMIN_PSWD: "postgres-password"

#Read Secrets from Redis Instance Secrets
secretsREDISRef:
  REDIS_PSWD: "redis-password"



# The name will be appended to the name of the deployment to create a unique name
volume:
  enabled: true
  name: data
  mountPath: /app/external
  accessModes:
    - ReadWriteOnce
  storageClass: default
  size: 1Gi


{{- $fullname := printf "%s" .Values.fullname | trunc 63 | trimSuffix "-" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullname }}
  labels:
    {{- include "one37id-bcagent.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace.name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "one37id-bcagent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "one37id-bcagent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "one37id-bcagent.serviceAccountName" . }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      restartPolicy: Always
      containers:
        - name: {{ $fullname }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          env:
            {{- range .Values.environment }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
            {{- range .Values.envfrom }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  key: {{ .key | quote }}
                  name: {{ .secretname | quote }}
                  optional: false
            {{- end }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          ports:
            - name: http-public
              containerPort: {{ .Values.service.publicport }}
              protocol: TCP
            - name: http-admin
              containerPort: {{ .Values.service.adminport }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
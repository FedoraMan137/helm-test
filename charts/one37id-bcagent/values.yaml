# Default values for one37 Business Connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: ""
fullname: ""

liveCheck: false

image:
  repository: registry.gitlab.com/one37id/registry/solitaire/staging
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: [{"name": "one37id-bcagent-one37secrets-repo-secret"}]

# Any value here above 1 will require the REDIS or MQ service
# to be enabled and specified below
replicaCount: 0

# Supported values: redis, rabbitmq
replicaQueHandler:
  enabled: false
  handler: redis

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}


podSecurityContext:
  enabled: true
  fsGroup: 1001

containerSecurityContext:
  runAsUser: 1001
  runAsNonRoot: true

updateStrategy:
#   ## StrategyType
#   ## Can be set to RollingUpdate or OnDelete
#   ##
  type: "OnDelete"

service:
  type: "ClusterIP"
  twoPortMode: false
  publicPort: "8080"
  adminPort:  "8080"

ingress:
  enabled: true
  # className: nginx # use this for Azure with open source nginx ingress controller
  className: ""  # use this for IBM Cloud
  annotations:
    kubernetes.io/ingress.class: public-iks-k8s-nginx  # use this for IBM Cloud
    proxybodysize: "50m"
  hosts:
    - host: ibmtest.dev-one37.id
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              port:
                number: 8080
        #if you want to add another path for admin
        # - path: /config
        #   pathType: ImplementationSpecific
        #   backend:
        #     service:
        #       port:
        #         number: 8081
  tls:
    - secretname: one37id-bcagent-one37secrets-tls
      hosts:
        - ibmtest.dev-one37.id

resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  limits: {}
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}

pvc:
  enabled: false
  name: "bcagent-pvc"
  accessModes:
    - ReadWriteOnce
  storageClassName: "default"
  size: "1Gi"


nodeSelector: {}

tolerations:

affinity: {}

configmap:
  ASPNETCORE_ENVIRONMENT: "Development"
  MINIMUM_LOG_LEVEL: 1

environment:
  AGENT_SETUP_MODE: "true"
  USE_HTTPS_MESSAGE_TYPES: "false"
  USE_HTTPS: "false"
  IS_RUNNING_BEHIND_PROXY: "true"
  SSO_ENABLED: "false"
  AGENT_CATEGORY: "Device"
  ARS_URL: https://ars.dev-one37.id
  ARS_ALIAS: "ars"
  AGENT_GENESIS: https://raw.githubusercontent.com/One37ID/indy-did-networks/one37/networks/one37id/testnet/pool_transactions_genesis
  AGENT_POOL: "one37id-devnet"
  AGENT_ALIAS: "ibm-agent"
  ARS_ENDPOINT: https://ars-agent.dev-one37.id/agent
  USE_STUDIO_CONFIG: "true"
  STUDIO_URL: https://studio.dev-one37.id
  CONFIGURATION_URL: https://studio.dev-one37.id
  # CREDENTIAL_CLEANER_SERVICE_CRON: "*/5 * * * *"
  # WORKFLOW_CLEANER_SERVICE_CRON: "*/1 * * * *"
    #Metrics Support
  OTEL_METRICS_ENABLED: "false"
  OTEL_LOGGING_ENABLED: "false"
  OTEL_PROMETHEUS_EXPORT: "false"
  OTEL_ENDPOINT: "https://simplist-collector:4317"
  OTEL_PROTOCOL: "GRPC"

  # ENGINE_WORKFLOW_DLL_FOLDER: "/app/workflows"
  PG_HOST: "one37-psql"
  PG_PORT: "5432"
  PG_CONNECTION: "one37-psql:5432"
  REDIS_HOST: "one37-redis-master"
  REDIS_PORT: "6379"

secrets:
  create: true
  postgresSecretName: "one37-psql"
  redisSecretName: "one37-redis"
  app:
    PG_USER: postgres
    PG_ADMIN_USER: postgres
    WALLET_KEY: Ns7eExZYeFO0dHVn2qqPKHmnrxTFa7wb
    AGENT_NYM: 4p85wwn25cgNMdstGSZ2EC
    STUDIO_CONTACT_ID: c0e85c4b-2648-4bfe-9e5c-c1da17119f51
    CONFIGURATION_SECRET_KEY: 3Zfx5GfO9K7M6C7b48o1HSOvRhl4iOgB
    STUDIO_RSA_PRIVATE_KEY: -----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAmEI9TAMUtWZdoxnMJYpNZzxvEvUfa0HnXphKsABcw2AIn18YHFhQcP9+90REdNU30z309uQ1JF43JTPITBh7fNh8dDDAwDbe5nZlWalrI1AOcsFNOCiTwijIXrYHkRo66t/vB0wSgcWxe3YNrCNooEfDvq7n0oRMTnDsgia5wPcQuSofTxToCq6Y1l16oc1sl6lPeAtttQ2bK1jc+UndfxjwzZ/tO7zt7S1LLVjBXGuf0r6kmqmgk59krPsUJIo/5zb8CxjXT6lOX3Zytt7Uuvej/ocawRzHN6CUo016fr9/bsVHk0YMW5z0e5v3rJmF/eHtNDNSZCHQ5TpagXH8ywIDAQABAoIBADmbdk24LLGllXAMZq0dcsPInc3yaHzQZpXn0PpeaLqTLy/9bsXqtCTMxmEPt0btFT4bhv+SwHiOHRc6TGJeMPq/ffcIKyWOnS9dRGN0MlEeDRlmAa1pzN39SDJtdNd1sS0EpQ+BvM7U2Z34wJuMmh1qiakvzA5ed/CF0TY9KLLVMQ+hv5Y3E3GR7DsC+0ZXHzeGH9tafsnc5qeGGnwoxvvDpzRnGvD0zi8Q+woSe3PfJ6ddOD0CuCm4qYpBlBaEveYAHghS3IglcPbLBv4z3GN1RkB/u1JBkiAMpBtMOFQ18jfmeFWEvnmh+rC4TuCeqVLGPGbHE5Z0Axt0YNhu70ECgYEA4UUNaQ3sEadDXEB+bflXWIL/AgUc3iH3wEeRm/f8a7wi6TvcigQM/jD4I0gybh9WtM9LmPMZWTweOyAIlzPI54LgHgrC+tkeBSFvPwMBhm9mqOfuClDr52J7O0nKAmkyS5vo1Pbq36jnKq5JvMitX/k7ws+iOXzsPynXKxaSwcMCgYEArQd42oN/DGXshNhzPZ9keEf7ybJB1bFxHbQyRmRB+QDrrLcnih5f8/13KwCOIUlHWLarVmEKApPp25fRQtWn5uu7N/EL2SDVHRfpPkMNjiW4m7cZSw83ZTSDbAQ7Xk93voVsE4EBpI8GWvlvzYa9ljUNvzd50pmTNvd62GV24FkCgYEAiNeMnOuTIuordifLZXzY/XCd/hki/yE9QfV303oiQUPJJUty3fg1+FfA9JXP5Ktu3WkrcB8En/twFdSQw2D2wwPypu08omsv3EgCLxHhZEvZ3fL93BBqLWXanBpn92z12447MttHtFQDER9Mtbxl7W4WSnIdBrUHQhtllMwinEcCgYBG8mFjd7eIZeJtNjNKeSjBCQL82NKVxIQVIeXbZxCGARKhZxgXUg0WBj/uqfOdQma2wW/Po0pvdCbXm5B6TxDhZpcFgRjSltvLahqBJQ1R07W2Y4VDeaHFJZsdlz6glQUMYbjG5oa96sc4Vj65jx39kRNp7F1PNRlf2GnOgQwVQQKBgEoGYeZQExKWeumoyOhAAP2l1XVV+AQVUJALtlIqUhm2NoEqFJpf6dEBNiDfUJwJ/jfe1tvoeAm8Og4fgL7jc0P5Ee9D6sBPoYhWDo8tg2GgRPCrFrhY8qOCZxBw7sLDOGK0wIxB9NItjsitpphbar4OpLodNirnkIKy5QzobnrV-----END RSA PRIVATE KEY-----

  postgres:
    passwordKey: "postgres-password"
  redis:
    passwordKey: "redis-password"


#Read Secrets from Postgres Secrets
secretsPGRef:
  PG_PSWD: "postgres-password"
  PG_ADMIN_PSWD: "postgres-password"

#Read Secrets from Redis Instance Secrets
secretsREDISRef:
  REDIS_PSWD: "redis-password"

## @param extraVolumes Optionally specify extra list of additional volumes for PhpMyAdmin pods
##
extraVolumes:
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for PhpMyAdmin container(s)
##
extraVolumeMounts:

